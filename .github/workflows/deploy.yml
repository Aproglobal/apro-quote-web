name: Deploy Firebase (Functions + Hosting)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.FIREBASE_PROJECT_ID }}

      - name: Install Firebase CLI
        run: npm i -g firebase-tools@latest

      - name: Enable required Google APIs
        run: |
          gcloud services enable \
            firebase.googleapis.com \
            firestore.googleapis.com \
            firebaserules.googleapis.com \
            cloudfunctions.googleapis.com \
            cloudbuild.googleapis.com \
            artifactregistry.googleapis.com \
            secretmanager.googleapis.com \
            storage.googleapis.com \
            run.googleapis.com \
            eventarc.googleapis.com \
            --project "${FIREBASE_PROJECT_ID}"

      - name: Patch .firebaserc (optional)
        run: |
          if [ -f ".firebaserc" ]; then
            sed -i "s/\"default\": \".*\"/\"default\": \"${FIREBASE_PROJECT_ID}\"/g" .firebaserc || true
          fi

      - name: Deploy Firestore Rules
        run: firebase deploy --only firestore:rules --project "${FIREBASE_PROJECT_ID}"

      # -------- Functions --------
      - name: Install deps (functions)
        working-directory: functions
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Build (functions)
        working-directory: functions
        run: npm run build --if-present

      - name: Set Functions Secret (OPENAI_API_KEY) if provided
        run: |
          if [ -n "${OPENAI_API_KEY}" ]; then
            firebase functions:secrets:set OPENAI_API_KEY \
              --project "${FIREBASE_PROJECT_ID}" \
              --data "${OPENAI_API_KEY}"
          else
            echo "OPENAI_API_KEY not set; skipping secret."
          fi

      # -------- Web (Vite in /web) --------
      - name: Install deps (web)
        working-directory: web
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Build (web)
        working-directory: web
        run: npm run build

      # -------- Deploy both --------
      - name: Deploy Functions + Hosting
        run: firebase deploy --only functions,hosting --project "${FIREBASE_PROJECT_ID}" --force
