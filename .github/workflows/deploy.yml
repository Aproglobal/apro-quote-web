name: Deploy to Firebase (lightweight, SA JSON only)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 서비스계정(JSON)으로 Firebase CLI가 쓰는 ADC 설정
      - name: Auth with Service Account (ADC)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Firebase CLI
        run: npm i -g firebase-tools@latest

      # Functions
      - name: Install deps (functions)
        working-directory: functions
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build Functions
        working-directory: functions
        run: npm run build

      # (선택) Secret 주입 — 자주 바뀌지 않으면 주석 처리 권장
      - name: Set Functions Secret (OPENAI_API_KEY)
        if: ${{ env.OPENAI_API_KEY != '' }}
        run: |
          firebase functions:secrets:set OPENAI_API_KEY \
            --project "${FIREBASE_PROJECT_ID}" \
            --data "${OPENAI_API_KEY}"

      - name: Deploy Firestore Rules
        run: firebase deploy --only firestore:rules --project "${FIREBASE_PROJECT_ID}"

      # Web
      - name: Install deps (web)
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build Web
        run: npm run build

      - name: Deploy Functions
        run: firebase deploy --only functions --project "${FIREBASE_PROJECT_ID}"

      - name: Deploy Hosting
        run: firebase deploy --only hosting --project "${FIREBASE_PROJECT_ID}"
