name: deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  PR_TOKEN: ${{ secrets.PR_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-24.04

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            web/package-lock.json
            functions/package-lock.json

      # ---- GCP / Firebase ----
      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.FIREBASE_PROJECT_ID }}
          version: latest

      - name: Install Firebase CLI
        run: npm i -g firebase-tools@latest

      - name: Enable required GCP APIs
        shell: bash
        run: |
          gcloud services enable \
            firebase.googleapis.com \
            firestore.googleapis.com \
            firebaserules.googleapis.com \
            cloudfunctions.googleapis.com \
            cloudbuild.googleapis.com \
            artifactregistry.googleapis.com \
            secretmanager.googleapis.com \
            storage.googleapis.com \
            run.googleapis.com \
            eventarc.googleapis.com \
            pubsub.googleapis.com \
            --project "$FIREBASE_PROJECT_ID"

      - name: Patch .firebaserc default project (optional)
        shell: bash
        run: |
          if [ -f ".firebaserc" ]; then
            sed -i "s/\"default\": \".*\"/\"default\": \"$FIREBASE_PROJECT_ID\"/g" .firebaserc || true
          fi

      # ---- Firestore rules ----
      - name: Deploy Firestore rules
        run: firebase deploy --only firestore:rules --project "$FIREBASE_PROJECT_ID"

      # ---- Secrets (functions) ----
      - name: Update OPENAI_API_KEY secret for Functions
        run: |
          printf '%s' "$OPENAI_API_KEY" | \
          firebase functions:secrets:set OPENAI_API_KEY --project "$FIREBASE_PROJECT_ID" --non-interactive

      # ---- Functions build & deploy ----
      # (프로젝트 루트의 tsc가 functions/lib를 빌드한다고 전제: 기존 로그와 동일)
      - name: Build (root, if present)
        run: npm run build --if-present

      - name: Deploy Cloud Functions
        run: firebase deploy --only functions --project "$FIREBASE_PROJECT_ID" --non-interactive

      # ---- Web: 의존성 자동 보강 (항상 0 종료) ----
      - name: Ensure UI deps (web)
        id: ensure_ui_deps
        working-directory: web
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const f = 'package.json';
          const need = { "framer-motion": "^11.2.10", "lucide-react": "^0.460.0" };
          const pkg = JSON.parse(fs.readFileSync(f, 'utf8'));
          let changed = false;
          pkg.dependencies = pkg.dependencies || {};
          for (const [k, v] of Object.entries(need)) {
            if (!pkg.dependencies[k]) { pkg.dependencies[k] = v; changed = true; console.log('[add]', k+'@'+v); }
          }
          if (changed) fs.writeFileSync(f, JSON.stringify(pkg, null, 2) + '\n');
          require('fs').appendFileSync(process.env.GITHUB_OUTPUT, `changed=${changed}\n`);
          NODE

      - name: Update lockfile (web, only if deps changed)
        if: steps.ensure_ui_deps.outputs.changed == 'true'
        working-directory: web
        run: npm i --package-lock-only --no-audit --progress=false

      - name: Install deps (web)
        working-directory: web
        run: npm ci --no-audit --progress=false

      - name: Build (web)
        working-directory: web
        run: npm run build

      - name: Deploy Hosting (web)
        run: firebase deploy --only hosting --project "$FIREBASE_PROJECT_ID" --non-interactive

      # ---- Create PR only when UI deps were added ----
      - name: Create Pull Request for UI deps
        if: steps.ensure_ui_deps.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ env.PR_TOKEN }}
          commit-message: chore(web): add UI deps (framer-motion, lucide-react) [skip ci]
          title: chore(web): add UI deps (framer-motion, lucide-react)
          body: |
            CI가 web 빌드 중 필요한 UI 의존성을 감지하여 package.json과 lock 파일을 갱신했습니다.
            - framer-motion
            - lucide-react
          labels: dependencies
          base: main
          branch: chore/ui-deps
          branch-suffix: timestamp
          add-paths: |
            web/package.json
            web/package-lock.json
