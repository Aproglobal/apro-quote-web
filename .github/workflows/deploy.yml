name: Deploy Firebase Functions

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      # 선택: Puppeteer 크로미움 다운로드를 CI에서 건너뛰고 싶으면 주석 해제
      # PUPPETEER_SKIP_DOWNLOAD: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          # lockfile이 있으면 캐시 키가 안정적입니다.
          cache-dependency-path: functions/package-lock.json

      - name: Harden npm (retry & timeouts)
        run: |
          npm config set fetch-retries 5
          npm config set fetch-retry-factor 3
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          npm config set timeout 600000
          npm config set registry "https://registry.npmjs.org/"

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Install Firebase CLI (retry)
        run: |
          for i in 1 2 3; do
            npm i -g firebase-tools@latest && break || {
              echo "firebase-tools install failed ($i/3). retry in 10s..."
              sleep 10
            }
          done

      # ---- Functions deps & build ----
      - name: Install deps (functions) with retry
        working-directory: functions
        run: |
          for i in 1 2 3; do
            if [ -f package-lock.json ]; then
              npm ci --no-audit --progress=false && break
            else
              npm i --no-audit --progress=false && break
            fi
            echo "npm install failed ($i/3). retry in 20s..."
            sleep 20
          done

      - name: Build (functions)
        working-directory: functions
        run: npm run build --if-present

      # 필요한 API 보장(한 번 켜두면 idempotent)
      - name: Enable required Google APIs
        run: |
          gcloud services enable \
            firebase.googleapis.com \
            cloudfunctions.googleapis.com \
            cloudbuild.googleapis.com \
            artifactregistry.googleapis.com \
            secretmanager.googleapis.com \
            run.googleapis.com \
            eventarc.googleapis.com \
            --project "${FIREBASE_PROJECT_ID}"

      - name: Deploy Functions
        run: firebase deploy --only functions --project "${FIREBASE_PROJECT_ID}"
