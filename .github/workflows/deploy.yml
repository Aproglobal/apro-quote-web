# .github/workflows/deploy.yml
name: Deploy to Firebase (Hosting + Functions + Rules)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # ✅ 프로젝트 컨텍스트 고정(권한 없으면 실패하지 않도록 || true)
      - name: Set gcloud project (hard set)
        run: gcloud config set project "${FIREBASE_PROJECT_ID}" || true

      - name: Verify project & principal (non-blocking)
        run: |
          gcloud config list
          gcloud auth list
          gcloud projects describe "${FIREBASE_PROJECT_ID}" --format="value(projectId,projectNumber)" || true

      - name: Install Firebase CLI
        run: npm i -g firebase-tools@latest

      # ▶︎ API Enable은 1회 콘솔에서 하는 것을 권장. 필요 시 주석 해제하되 실패해도 파이프라인은 진행.
      - name: Enable required Google APIs (optional)
        run: |
          gcloud services enable \
            firestore.googleapis.com \
            firebaserules.googleapis.com \
            cloudfunctions.googleapis.com \
            cloudbuild.googleapis.com \
            artifactregistry.googleapis.com \
            secretmanager.googleapis.com \
            storage.googleapis.com \
            --project "${FIREBASE_PROJECT_ID}" || true

      - name: Patch .firebaserc (optional)
        run: |
          if [ -f ".firebaserc" ]; then
            sed -i "s/FIREBASE_PROJECT_ID_PLACEHOLDER/${FIREBASE_PROJECT_ID}/g" .firebaserc || true
          fi

      - name: Deploy Firestore Rules
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_GHA_CREDS_PATH }}
        run: firebase deploy --only firestore:rules --project "${FIREBASE_PROJECT_ID}"

      # ⚠️ 매 실행마다 새 비전이 생길 수 있음. 필요 없으면 주석 처리 가능.
      - name: Set Functions Secret (OPENAI_API_KEY)
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_GHA_CREDS_PATH }}
        run: |
          firebase functions:secrets:set OPENAI_API_KEY \
            --project "${FIREBASE_PROJECT_ID}" \
            --data "${OPENAI_API_KEY}"

      - name: Install deps (functions)
        working-directory: functions
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build Functions
        working-directory: functions
        run: npm run build

      - name: Deploy Functions
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_GHA_CREDS_PATH }}
        run: firebase deploy --only functions --project "${FIREBASE_PROJECT_ID}"

      - name: Install deps (web)
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build Web
        run: npm run build

      - name: Deploy Hosting
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_GHA_CREDS_PATH }}
        run: firebase deploy --only hosting --project "${FIREBASE_PROJECT_ID}"
