name: Deploy to Firebase (Hosting + Functions + Rules)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # ⚠️ lockfile이 없으니 캐시 미사용
          # cache: 'npm'  ← 제거

      # Google 인증 (서비스 계정)
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      # (중요) 필요한 API 활성화 — 403 방지
      - name: Enable required Google APIs
        run: |
          gcloud services enable \
            firestore.googleapis.com \
            firebaserules.googleapis.com \
            cloudfunctions.googleapis.com \
            cloudbuild.googleapis.com \
            artifactregistry.googleapis.com \
            secretmanager.googleapis.com \
            storage.googleapis.com \
            --project "${FIREBASE_PROJECT_ID}"

      # .firebaserc placeholder 치환(있을 때만)
      - name: Patch .firebaserc (optional)
        run: |
          if [ -f ".firebaserc" ]; then
            sed -i "s/FIREBASE_PROJECT_ID_PLACEHOLDER/${FIREBASE_PROJECT_ID}/g" .firebaserc || true
          fi

      # Firestore 규칙 배포
      - name: Deploy Firestore Rules
        run: firebase deploy --only firestore:rules --project "${FIREBASE_PROJECT_ID}"

      # Functions Secret 설정/갱신
      - name: Set Functions Secret (OPENAI_API_KEY)
        run: |
          firebase functions:secrets:set OPENAI_API_KEY \
            --project "${FIREBASE_PROJECT_ID}" \
            --data "${OPENAI_API_KEY}"

      # Functions 빌드 & 배포
      - name: Install deps (functions)
        working-directory: functions
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build Functions
        working-directory: functions
        run: npm run build

      - name: Deploy Functions
        run: firebase deploy --only functions --project "${FIREBASE_PROJECT_ID}"

      # 프론트 빌드 (Vite 기본 outDir=dist)
      - name: Install deps (web)
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build Web
        run: npm run build

      # Hosting 배포 (firebase.json의 "public"이 dist 인지 확인!)
      - name: Deploy Hosting
        run: firebase deploy --only hosting --project "${FIREBASE_PROJECT_ID}"
